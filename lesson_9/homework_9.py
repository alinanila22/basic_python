# ++++++++++++++++++++++++++++++++++++++++++++++++
# Словари в Python (dict)
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ===============================================
# 1.Создайте словарь, в котором хранятся названия фруктов и их цены за 1 кг.
# Добавьте в словарь еще один фрукт и выведите итоговый словарь.

# fruits = {"Бананы": 30, "Киви": 20, "Апельсины": 40}
# fruits.setdefault("Мандарины", 50)
# print(fruits)

# Пример:
# {'Бананы': 30, 'Киви': 20, 'Апельсины': 40, 'Мандарины': 50}
# ===============================================
# 2. Дан словарь с оценками студентов:
# grades = {"Анна": 5, "Борис": 4, "Виктор": 3, "Галина": 5, "Дмитрий": 2}
# Выведите имена студентов, у которых оценка не ниже 4.

# grades = {"Анна": 5, "Борис": 4, "Виктор": 3, "Галина": 5, "Дмитрий": 2}
# for student, grade in grades.items():
#     if grade >= 4:
#         print(f"{student}: {grade}")

# Пример:
# Анна: 5
# Борис: 4
# Галина: 5
# ===============================================
# 3. Создайте словарь, содержащий название стран в качестве ключей и их столицы в качестве значений.
# Пользователь вводит название страны.
# Выведите столицу этой страны (если страна отсутствует в словаре, выведите "Страна не найдена").

# countries = {
#     "Франция": "Париж",
#     "Германия": "Берлин",
#     "Россия": "Москва",
#     "Испания": "Мадрид",
#     "Казахстан": "Астана"
# }
# country = input("Введите название страны: ")
# print(countries.get(country, "Страна не найдена" ))

# Пример:
# Введите название страны: Франция
# Париж

# Введите название страны: Алматы
# Страна не найдена
# ===============================================
# 4. Дан список студентов и их курсов:
# students = [
#     ("Анна", "Python"),
#     ("Борис", "Java"),
#     ("Виктор", "Python"),
#     ("Галина", "C++"),
#     ("Дмитрий", "Python")
# ]
# Создайте словарь, в котором ключами будут названия курсов, а значениями — списки студентов, которые изучают этот курс.

# courses = {}
# for name, course in students:
#     courses.setdefault(course, []).append(name)
# print(courses)

# Пример:
# {'Python': ['Анна', 'Виктор', 'Дмитрий'], 'Java': ['Борис'], 'C++': ['Галина']}
# ===============================================
# 5. Создайте словарь, содержащий оценки студентов:
# Используя метод pop(), удалите студента с самой низкой оценкой и выведите обновленный словарь.

# students_2 = {"Анна": 5, "Борис": 4, "Виктор": 3, "Галина": 5, "Дмитрий": 2}
# lowest = min(students_2, key=students_2.get)
# students_2.pop(lowest)
# print(students_2)

# Пример:
# {'Анна': 5, 'Борис': 4, 'Виктор': 3, 'Галина': 5}
# ===============================================
# 6. Дан список студентов:

# Преобразуйте этот список в словарь, заполнив значения всех студентов None. Затем обновите словарь указав в значение возраст студентов.
# students_dict = dict.fromkeys(students, None)
# for student, value in students_dict.items():
#     print(f"{student}: {value}")
# students_dict.update({"Анна": 25, "Борис": 36, "Виктор": 38, "Галина": 30})
# print(students_dict)

# Пример:
# Анна None
# Борис None
# Виктор None
# Галина None
# {'Анна': 25, 'Борис': 36, 'Виктор': 38, 'Галина': 30}
# ===============================================
# 7. Дан словарь с курсами валют:
# exchange_rates = {"USD": 90, "EUR": 98, "GBP": 115}
# Пользователь вводит валюту (USD, EUR или GBP).
# Если валюта есть в словаре, выведите ее курс, иначе выведите "Неизвестная валюта". Если валюта не известна, то
# добавьте новую валюты со значением None

# exchange_rates = {"USD": 90, "EUR": 98, "GBP": 115}
# currency = input("Введите валюту: ")
# if currency in exchange_rates:
#     print(exchange_rates[currency])
# else:
#     print("Неизвестная валюта")
#     exchange_rates[currency] = None
# print(exchange_rates)

# Пример:
# Введите валюту: USD
# 90
# {'USD': 90, 'EUR': 98, 'GBP': 115}

# Введите валюту: RUS
# Неизвестная валюта
# {'USD': 90, 'EUR': 98, 'GBP': 115, 'RUS': None}

# 8. Создайте два словаря:
# dict1 = {"Python": "Язык программирования", "Java": "Популярный язык", "C++": "Язык для высокопроизводительных систем"}
# dict2 = {"Python": "Простой и мощный", "JavaScript": "Язык для веба"}
# Объедините их с помощью update().

# dict1 = {"Python": "Язык программирования", "Java": "Популярный язык", "C++": "Язык для высокопроизводительных систем"}
# dict2 = {"Python": "Простой и мощный", "JavaScript": "Язык для веба"}
# dict1.update(dict2)
# print(dict1)

# Пример:
# {'Python': 'Простой и мощный', 'Java': 'Популярный язык', 'C++': 'Язык для высокопроизводительных систем', 'JavaScript': 'Язык для веба'}

# +++++++++++++++++++++++++++++++++++++++++++++++
# Кортежи в Python
# +++++++++++++++++++++++++++++++++++++++++++++++
# ===============================================
# 1. Создайте кортеж из пяти элементов (разных типов данных).
# Выведите на экран второй элемент и последний элемент этого кортежа.

# N = (2.11, "Tennis", 36, True, [2, 3, 8])
# print("Второй элемент:",N[1])
# print("Последний элемент:",N[-1])

# Пример:
# Второй элемент: Tennis
# Последний элемент: [2, 3, 8]

# ===============================================
# 2. Дан кортеж чисел:
# nums = (4, 7, 2, 9, 4, 1, 7, 4, 3, 9)
# Выведите количество вхождений числа 4 в этом кортеже.
# Найдите индекс первого вхождения числа 7.

# nums = (4, 7, 2, 9, 4, 1, 7, 4, 3, 9)
# print("Количество вхождений числа 4:", nums.count(4))
# print("Количество вхождений числа 7:", nums.count(7))

# Пример:
# Количество вхождений числа 4: 3
# Количество вхождений числа 7: 2
# ===============================================
# 3. Преобразуйте следующий список в кортеж:
# lst = ["Python", "Java", "C++", "JavaScript"]
# После преобразования проверьте, присутствует ли в кортеже элемент "C++".
# lst = ["Python", "Java", "C++", "JavaScript"]
# t3 = tuple(lst)
# print("C++ присутствует:", "C++" in t3)

# Пример:
# C++ присутствует: True

# ===============================================
# 4. Создайте кортеж с числами от 1 до 10.
# Используя срезы, выведите:
# Первые три элемента.
# Последние три элемента.
# Все элементы с шагом 2.

# numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
# print("Первые три:",numbers[0:3])
# print("Последние три:",numbers[-3::])
# print("С шагом 2:",numbers[0::2])

# Пример:
# Первые три: (1, 2, 3)
# Последние три: (8, 9, 10)
# С шагом 2: (1, 3, 5, 7, 9)
# ===============================================
# 5. Создайте кортеж, содержащий вложенные список и словарь.
# Попробуйте изменить список внутри кортежа, добавив в него новый элемент.

N = ([2, 4, 3], {"city": "Paris"}, {"a": 22, "b": 35})
N[0].append(10)
N[1]["new_city"] = "London"
N[2]["c"] = 5
print("Измененн кортеж:", N )

# Пример:
# Измененн кортеж: ([2, 4, 3, 10], {'city': 'Paris', 'new_city': 'London'}, {'a': 22, 'b': 35, 'c': 5})
