# ++++++++++++++++++++++++++++++++++++++++++++++++
# Чтение и запись данных из файлов
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ===============================================
# 1. Создайте текстовый файл data.txt со следующим содержимым:
#
# Python – это мощный язык программирования.
# Работа с файлами важна для автоматизации.
# Чтение файлов в Python удобно и просто.
#
# Напишите программу, которая полностью прочитает файл и выведет его содержимое.

# f = open("data.txt", "r", encoding="utf-8") # "r" - только чтение (требует, чтобы файл существовал)
# print(f.read())
# f.close() # не забыть закрыть!

# "r" = read (чтение)
# "w" - запись (создает новый файл)
# "a" - добавление в конец
# "r+" - чтение и запись

# f.read() - читает весь файл
# f.readline() - читает одну строку
# f.readlines() - читает все строки в список
# f.close() - закрывает файл

# ===============================================
# 2. Напишите программу, которая считает и выведет только первую строку из файла data.txt.
# Ожидаемый вывод:
# Python – это мощный язык программирования.

# with open("data.txt", "r", encoding="utf-8") as f:  # С with - закрывается автоматически
#     print(f.readline())  # читает ровно одну строку из файла

# ===============================================
# 3. Откройте файл data.txt и прочитайте первые 10 символов.
# Ожидаемый вывод:
# Python – э

# f = open("data.txt", "r", encoding="utf-8")
# print(f.read(10))
# f.close()

# ===============================================
# 4. Прочитайте все строки файла и сохраните их в список. Затем выведите этот список.
# Ожидаемый вывод:
# ['Python – это мощный язык программирования.\n', 'Работа с файлами важна для автоматизации.\n', 'Чтение файлов в Python удобно и просто.\n']

# with open("data.txt","r",encoding="utf") as f:
#     print(f.readlines()) # читает все строки в список

# ===============================================
# 5. Напишите программу, которая считает строки файла data.txt в цикле и выводит их по одной, убирая символ \n в конце.
# Ожидаемый вывод:
# Строка: Python – это мощный язык программирования.
# Строка: Работа с файлами важна для автоматизации.
# Строка: Чтение файлов в Python удобно и просто.

# f = open("data.txt", "r", encoding="utf-8")
# for line in f:  # цикл, который проходит по каждой строке файла
#     print("Строка:", line.strip())  # убирает символы \n и пробелы с обоих концов строки
# f.close()

# ===============================================
# 6. Откройте файл data.txt, прочитайте 5 символов, затем переместите указатель в начало файла
# и снова прочитайте 5 символов и выведите их.
# Ожидаемый вывод:
# Python
# Python

# with open("data.txt","r", encoding="utf-8") as f:
#     print(f.read(5))
#     f.seek(0)  # Перемещаем указатель в начало файла
#     print(f.read(5))

# Ожидаемый вывод:
# Pytho - 0 1 2 3 4 -символов 5
# Pytho - 0 1 2 3 4 -символов 5

# ===============================================
# 7. Напишите программу, которая откроет файл data.txt, определит его размер (в байтах) и выведет его.
# Ожидаемый вывод:
# Размер файла: 128 байт  # (значение может отличаться)

# import os

# size = os.path.getsize("data.txt")
# os.path.getsize() - функция получения размера файла

# print(f"Размер файла: {size} байт")

# Ожидаемый вывод:
# Размер файла: 220 байт

# ===============================================
# 8. Используйте with open(), чтобы прочитать и вывести содержимое файла data.txt.

# with open("data.txt","r",encoding="utf") as f:
#     print(f.read())

# ===============================================
# 9. Напишите программу, которая пытается открыть файл data.txt, прочитать его содержимое и вывести его.
# Если файл не найден, программа должна вывести "Ошибка: Файл не найден".

# Ожидаемый вывод (если файл есть):
# Python – это мощный язык программирования.
# Работа с файлами важна для автоматизации.
# Чтение файлов в Python удобно и просто.
#
# Ожидаемый вывод (если файла нет):
# Ошибка: Файл не найден

# try:
#     with open("data.txt", "r", encoding="utf-8") as f:
#         print(f.read())
# except FileNotFoundError:
#     print("Ошибка: Файл не найден")

# ===============================================
# 10. Модифицируйте программу из Задания 1, добавив гарантированное закрытие файла в блоке finally.

# f = None                                        # Руки пусты
# try:                                            # Пытаюсь
#     f = open("data.txt", "r", encoding="utf-8") # Взять коробку
#     print(f.read())                             # Показать что внутри
# finally:                                        # В ЛЮБОМ СЛУЧАЕ
#     if f is not None:                           # Если коробка в руках
#         f.close()                               # Убрать коробку!

# ===============================================
# 11. Используйте with open(), чтобы безопасно открыть файл data.txt и прочитать его построчно.
# Если файл не найден, выведите "Ошибка: Файл не найден".

# try:
#     with open("data.txt", "r", encoding="utf-8") as f:
#         for line in f:
#             print(line.strip())
# except FileNotFoundError:
#     print("Ошибка: Файл не найден")

# ===============================================
# 12. Создайте файл numbers.txt, который содержит по одному числу в каждой строке.
# Напишите программу, которая читает файл, суммирует все числа и выводит их сумму.
# Если файл не найден, программа должна вывести "Ошибка: Файл не найден".

# try:
#     with open("numbers.txt", "r", encoding="utf-8") as f:
#         total = 0
#         for line in f:
#             total += int(line.strip())  # Преобразуем строку в число и добавляем к общей сумме
#     print("Сумма:", total)
# except FileNotFoundError:
#     print("Ошибка: Файл не найден")

# 13. Создайте файл log.txt.
# Программа должна добавлять в него текущую дату и время при каждом запуске.
# Используйте модуль datetime и режим "a".
#
# Получение даты и времени для логирования:
# import datetime
# print(datetime.datetime.now().strftime("%d.%m.%Y %H:%M:%S"))
#
# Пример содержимого файла после нескольких запусков:
#
# 2024-02-16 14:30:01 Запуск программы
# 2024-02-16 14:35:15 Запуск программы
# 2024-02-16 14:40:22 Запуск программы

import datetime

with open("log.txt", "a", encoding="utf-8") as f:
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    f.write(f"{now} Запуск программы\n")

# Пояснения для исполнителя:
# Каждый раз когда вы запускаете программу - это как открыть дневник
# Режим "a" - как перелистнуть на новую страницу (не стирая старые)
# datetime.datetime.now() - посмотреть на часы и календарь
# f.write() - записать: "Сегодня такого-то числа я запустил программу"
