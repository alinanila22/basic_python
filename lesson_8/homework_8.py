# ++++++++++++++++++++++++++++++++++++++++++++++++
# Задачи по итераторам
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ===============================================
# 1. Пройти по списку с помощью итератора
# Создайте итератор для списка и выведите все его элементы с использованием next().

# city = ["Москва", "Санкт-Петербург", "Париж", "Берлин", "Астана"]
# it_city = iter(city)
# print(next(it_city))
# print(next(it_city))
# print(next(it_city))
# print(next(it_city))
# print(next(it_city))

# Пример:
# Москва
# Санкт-Петербург
# Париж
# Берлин
# Астана
# ===============================================
# 2. Итератор для строки
# Используйте iter() и next() для посимвольного вывода строки.

# str_1 = "Кирилл"
# it_str1 = iter(str_1)
# print(next(it_str1))
# print(next(it_str1))
# print(next(it_str1))
# print(next(it_str1))
# print(next(it_str1))
# print(next(it_str1))

# Пример:
# К
# и
# р
# и
# л
# л

# ++++++++++++++++++++++++++++++++++++++++++++++++
# Задачи по теме "Генераторы списков (List Comprehensions)"
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ===============================================
# 1. Создайте список из квадратов чисел от 1 до N, используя list comprehension.

# N = 8
# result = [num ** 2 for num in range(1, N+1)]
# print(result)

# Пример:
# [1, 4, 9, 16, 25, 36, 49, 64]

# ===============================================
# 2. Сформируйте список, содержащий только четные числа в диапазоне от -10 до 10.

# numbers = [f"{N}" for N in range(-10, 10+1) if N % 2 == 0]
# print(numbers)

# Пример:
# [-10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10]

# ===============================================
# 3. Дан список слов. Создайте новый список, содержащий длины всех слов, используя генератор списков.

# words = ["теннис", "скаладром", "лыжи", "велосипед"]
# lenth_words = [len(words) for words in words]  # len(word) - вычисляет длину текущего слова
                                                 # for word in words - перебирает каждое слово в исходном списке
# print(lenth_words)

# Пример:
# [6, 9, 4, 9]-то есть в указанных словах посчитано количество букв
# ===============================================
# 4. Создайте список из чисел от 1 до 20, где вместо четных чисел будет "четное", а вместо нечетных — "нечетное" (используйте тернарный оператор)

# numbers = [f"{n} - четное" if n % 2 == 0 else f"{n} - нечетное" for n in range(1, 21)]
# print(numbers)

# Пример:
# ['1 - нечетное', '2 - четное', '3 - нечетное', '4 - четное', '5 - нечетное',
#  '6 - четное', '7 - нечетное', '8 - четное', '9 - нечетное', '10 - четное',
#  '11 - нечетное', '12 - четное', '13 - нечетное', '14 - четное', '15 - нечетное',
#  '16 - четное', '17 - нечетное', '18 - четное', '19 - нечетное', '20 - четное']

# ===============================================
# 5. Проверка, является ли объект итерируемым
# Создайте список внутри которого 3 объекта: число, строка и список.
# Создайте генератор в котором будет написано True - если объект является итерируемым или False - если нет.

list = [21, "Теннис", [2, 3, 8]]
is_list = [True if hasattr(obj, '__iter__') else False for obj in list]
for l in range(len(list)):
    print("Объект", list[l], ":", "итерируемый" if is_list[l] else "не итерируемый")

# Пример:
# Объект 21 : не итерируемый
# Объект Теннис : итерируемый
# Объект [2, 3, 8] : итерируемый