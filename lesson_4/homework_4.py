# ++++++++++++++++++++++++++++++++++++++++++++++++
# Методы строк
# ++++++++++++++++++++++++++++++++++++++++++++++++

# ================================================
# 1. Работа с регистром
# ================================================

# Создай строку s = "Python для автоматизации".
# Преобразуй строку в верхний регистр и выведи результат.
# Преобразуй строку в нижний регистр и выведи результат.

s = "Python для авторизации"
print(s.upper()) # Преобразовали строку в верхний регистр: PYTHON ДЛЯ АВТОРИЗАЦИИ
print(s.lower()) # Преобразовали строку в нижний регистр: python для авторизации

# Можно и так:
# s1 = s.upper()
# s2 = s.lower()
# print(s)
# print(s1)
# print(s2)

# ================================================
# 2. Подсчет вхождений подстроки
# ================================================

# Создай строку msg = "абракадабра".
# Найди, сколько раз встречается подстрока "ра" в строке msg.
# Определи количество "а", начиная с 3-го символа.

msg = "абракадабра"
print(msg.count("ра")) # строка "ра" # встречается 2 раза
print(msg.count("а", 2)) # буква "а" с 3-го символа встречается 4 раза

# ================================================
# 3. Поиск подстроки
# ================================================

# Определи индекс первого вхождения "ка" в строке "абракадабра".
# Найди индекс последнего вхождения "а".
# Проверь, что произойдет, если искать "xyz" в строке.

print(msg.find("ка")) # индекс "4"
print(msg.rfind("а")) # индекс "10"
print(msg.find("xyz")) # Ошибки нет,выводит: индекс "-1"
print(msg.index("xyz")) # Ошибка есть-подстрока не найдена в нашей строке(ValueError: substring not found)

# ================================================
# 4. Замена подстроки
# ================================================

# Создай строку text = "Я изучаю Java".
# Замени "Java" на "Python".
# Удали все пробелы из строки.

text = "Я изучаю Java"
text1 = text.replace("Java", "Python")
print(text1.replace(" "," ")) # Я изучаю Python

# ================================================
# 5. Проверка содержимого строки
# ================================================

# Проверь, состоит ли строка "Python" только из букв.
# Проверь, состоит ли строка "12345" только из цифр.
# Проверь, что строка "123abc" не состоит только из цифр.

str = "Python"
print(str.isalpha()) # все символы являются буквами-True
str1 = "12345"
print(str1.isdigit()) # все символы являются цифрами-True
str2 = "123abc"
print(str2.isdigit()) # Состоит только из цифр-False
print(not str2.isdigit()) # Не состоит только из цифр-True

# ================================================
# 6. Дополнение строк
# ================================================

# Создай строку code = "42", дополни её до 5 символов слева нулями.
# Выравнивай строку "text" по ширине 10, добавляя * справа.

code = "42"
print(code.rjust(5, "0")) # дополненная строка: 00042
text = "text"
print(text.ljust(10, "*")) # выравнивание с * справа: text******


# ================================================
# 7. Разбиение строк
# ================================================

# Разбей строку "яблоко, груша, банан" на список слов.
# Разбей "Python;Java;C++" по ";".

text = "яблоко, груша, банан"
print(text.split()) # ['яблоко,', 'груша,', 'банан']

text1 = "Python;Java;C++"
print(text1.split(";")) # ['Python', 'Java', 'C++']

# Можно и так:
# text1 = "Python;Java;C++"
# res = text1.split(";")
# print(res) # ['Python', 'Java', 'C++']

# ================================================
# 8. Объединение списка в строку
# ================================================

# Соедини список ["Привет", "мир", "!"] в строку с пробелами.
# Преобразуй список ["apple", "banana", "cherry"] в строку через ", ".

words = "Привет", "мир", "!"
print(" ".join(words)) # Привет мир !

fruits = ["apple", "banana", "cherry"]
print(", ".join(fruits))

# ================================================
# 9. Удаление пробелов
# ================================================

# Удали пробелы слева в строке " Python".
# Удали пробелы справа в строке "Python ".
# Удали пробелы с обеих сторон в строке " Python ".

a = " Python"
print(a.lstrip()) # Python
b = "Python "
print(b.rstrip()) # Python
c = " Python "
print(c.strip()) # Python

# ================================================
# 10. Дополнительное задание
# ================================================

# Создай строку text = "программирование", сделай первую букву заглавной.
# Найди количество букв "р" в этой строке.
# Выведи индекс первой буквы "и".
# Разверни строку и выведи результат.

text = "программирование"
print(text.replace("п", "П")) # "Программирование"
print(text.capitalize()) # "Программирование"

print(text.count("р")) #3
print(text.find("и")) #8
print(text[::-1]) # еинавориммаргорп

# ++++++++++++++++++++++++++++++++++++++++++++++++
# Спецсимволы
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Перевод строки
# ================================================

# Создай строку text = "Hello\nPython".
# Выведи её на экран. Объясни, почему "Python" перешел на новую строку.

text = "Hello\nPython"
print(text) # "Python" перешел на новую строку, так как мы использовали символ \n-символ перевода строки

# ================================================
# 2. Горизонтальная табуляция-ВАЖНАЯ ТЕМА!!!
# ================================================

# Создай строку t = "Python\tAutomation".
# Выведи её и объясни, что делает \t.

t = "Python\tAutomation"
print(t) # \t - называется "табуляция" формирует отступ в тексте горизонтально (Python	Automation)

# ================================================
# 3. Экранирование символов-ВАЖНАЯ ТЕМА!!!
# ================================================

# Создай строку path = "C:\new\test.txt" и выведи её. Что произошло?
# Исправь ошибку, используя экранирование.
# Выведи строку "Марка вина "Ягодка"" так, чтобы кавычки внутри строки были корректными.

path = "C:\new\test.txt"
print(path) # вместо двойного слэша-использовались спецсимволы

path1 = "C:\\new\\test.txt"
print(path1)

text = "Марка вина "Ягодка""

text1 = "Марка вина \"Ягодка\""
print(text1) # Марка вина "Ягодка"

# Можно и так:
text2 = 'Марка вина "Ягодка"'
print(text2) # Марка вина "Ягодка"

# ================================================
# 4. Сырые (raw) строки
# ================================================

# Создай строку path = r"C:\new\test.txt" и выведи её.
# Объясни разницу между обычной и сырой строкой.

path = r"C:\new\test.txt"
print(path) # C:\new\test.txt-отображается сырая строка.В обычной строке спецсимволы подробно обрабатываются(спецсимволы работают),а в сырой строке спец.символы игнорируются(спецсимволы показываются как обычный текст)

# ================================================
# 5. Использование разных спецсимволов
# ================================================

# Создай строку s = "Hello\b World" и выведи её. Что произошло?
# Создай строку s = "Hello\fPython" и выведи её.

s = "Hello\b World"
print(s) # Hell World - символ - \b-удаляет предыдущий символ(в первом слове "Hello" исчезла последняя буква "o")

s1 = "Hello\fPython"
print(s1) # HelloPython

# ================================================
# 6. Дополнительное задание
# ================================================

# ++++++++++++++++++++++++++++++++++++++++++++++++
# Форматирование строк
# ++++++++++++++++++++++++++++++++++++++++++++++++

# ================================================
# 1. Формирование строк через конкатенацию
# ================================================

# Создай переменные имя и возраст.
# Сформируй строку "Меня зовут {имя}, мне {возраст} лет." с помощью оператора + и выведи её.
# Попробуй добавить число в строку без str(). Что произойдёт?

name = "Маша"
age = 36

print("Меня зовут " + name + ", мне " + str(age) + " лет.")

print("Меня зовут " + name + ", мне " + age + " лет.") # TypeError: can only concatenate str (not "int") to str-Ошибка при конкатенации числа
# ================================================

# 2. Форматирование строк с .format()
# ================================================

# Используя .format(), сформируй строку "Привет, меня зовут {имя}, мне {возраст} лет.".
# Используй .format() с именованными параметрами ({name}, {age}).
# Попробуй изменить порядок переменных в .format() и выведи строку.

name = "Маша"
age = 36
# print("Привет, меня зовут {name}, мне {age} лет.".format(name=name, age=age)) # Привет, меня зовут Маша, мне 36 лет.
print("Привет, меня зовут {name}, мне {age} лет.".format(age=age, name=name)) # Привет, меня зовут Маша, мне 36 лет.

# ================================================
# 3. Использование F-строк
# ================================================

# Создай переменные город и год.
# Выведи строку "Сегодня {год} год, и я живу в {город}." с помощью F-строки.
# Используй F-строку, чтобы вывести "Через 5 лет будет {год + 5} год.".

city = "Москве"
year = 2025
print(f"Сегодня {year} год, и я живу в {city}.") # Сегодня 2025 год, и я живу в Москве.
print(f"Через 5 лет будет {year + 5} год.") # Через 5 лет будет 2030 год.

# ================================================
# 4. Операции внутри F-строк
# ================================================

# Выведи "Дважды мой возраст: {...}", используя F-строку.
# Применяй .upper() к переменной, чтобы вывести имя в верхнем регистре.

name = "Маша"
age = 36

print(f"Дважды мой возраст: {age*2}") # Дважды мой возраст: 72
print(f"Мое имя в верхнем регистре: {name.upper()}") # Мое имя в верхнем регистре: МАША

# ================================================
# 5. Дополнительное задание
# ================================================

# Используя .format(), сформируй строку "Курс валют: 1 доллар = 92.5 рубля.", подставляя переменные.
# Используя F-строку, сформируй "Квадрат числа 7 равен 49.", вычисляя 7 ** 2 прямо внутри строки.

dollar_rate = 92.5
print("Курс валют: 1 доллар = {:.1f} рубля.".format(dollar_rate)) # Курс валют: 1 доллар = 92.5 рубля.

number = 7
print(f"Квадрат числа {number} равен {number ** 2}.") # Квадрат числа 7 равен 49.